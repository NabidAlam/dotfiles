" Update MYVIMRC
let $MYVIMRC="~/.dotfiles/vim.symlink/vimrc"

set ff=unix

" Fix background color erase
set t_ut=

if !has('nvim')
    " Make windows accept unixy stuff
    if has('win32') || has('win64')
        set runtimepath=~/.vim,$VIM/vimfiles,$VIM,$VIM/vimfiles/after,~/.vim/after
        set dir=$TEMP
    endif

    if has('gui_running')
        "Set encoding and font
        set encoding=utf-8
        set guifont=SauceCodePro_NF:h10:b:cDEFAULT

        " Maximize the window on launch
        if has('win32') || has('win64')
            au GUIEnter * simalt ~x
        endif
        if has("unix")
        let s:uname = system("uname")
        if s:uname == "Darwin\n"
            " Do Mac stuff here
            set fuopt=maxhorz,maxvert
            set guifont=Sauce_Code_Powerline:h12
            "au GUIEnter * set fullscreen
        endif
        endif
    endif
endif

let g:pathogen_disabled = []

"Load pathogen
execute pathogen#infect()

"Psh, compatibility schmompatibility
set nocompatible

set list listchars=tab:�.,trail:�

" Set Color Scheme
colorscheme monokai

filetype plugin indent on    " required

"Configure some simple settings
set backspace=2 "Backspace over indents, eol, etc.

"Set up VIM GUIs
set guioptions-=m " Hide menu bar
set guioptions-=T " Remove toolbar
set guioptions-=r
set guioptions-=L " Remove scrollbars

"Syntax Highlighting ON!
syntax on

"Indentation configuration
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set expandtab

" Statusline and line numbers
set laststatus=2
set number

" Macros/Mappings

" Change the leader to Space
let mapleader = "\<Space>"

" Leader mappings
nnoremap <Leader>w :w<CR>
nnoremap <Leader>y "+y
nnoremap <Leader>Y "+Y
nnoremap <Leader>d "+d
vnoremap <Leader>y "+y
vnoremap <Leader>Y "+Y
vnoremap <leader>d "+d
nnoremap <leader>p "+p
vnoremap <Leader>P "+P
nnoremap <Leader><Leader> V
nnoremap <Leader><Tab> :bn<CR>
nnoremap <Leader>= mzgg=G`z

nnoremap <Leader>1 :b1<CR>
nnoremap <Leader>2 :b2<CR>
nnoremap <Leader>3 :b3<CR>
nnoremap <Leader>4 :b4<CR>
nnoremap <Leader>5 :b5<CR>
nnoremap <Leader>6 :b6<CR>
nnoremap <Leader>7 :b7<CR>
nnoremap <Leader>8 :b8<CR>
nnoremap <Leader>9 :b9<CR>
nnoremap <Leader>0 :b10<CR>

nnoremap <Leader><CR> o<C-[>
nnoremap <Leader>j i<CR><C-[>

nnoremap <CR> G
nnoremap <BS> gg
map q: :q

vnoremap v <Plug>(expand_region_expand)
vnoremap <C-v> <Plug>(expand_region_shrink)

" Use Ctrl-[H,J,K,LJ to switch windows
map <C-H> <C-W>h<C-W>_
map <C-J> <C-W>j<C-W>_
map <C-K> <C-W>k<C-W>_
map <C-L> <C-W>l<C-W>_

" Airline settings
let g:airline_powerline_fonts=1

" Configure NERDTree and NERDTree tabs
map <C-N> <Esc>:NERDTreeToggle<CR>
let g:NERDTreeWinSize = 51
let g:NERDTreeDirArrowExpandable = "\uf07b"
let g:NERDTreeDirArrowCollapsible = "\uf07c"
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" CtrlP settings
let g:ctrlp_working_path_mode='ra'

" syntax highlighting debugging
map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>


" Useful functions
function! MakeInterpolatedString()
    exec "normal! m`F\"i$\<c-[>``l"
endfunction

nnoremap <Leader>$ :call MakeInterpolatedString()<CR>
