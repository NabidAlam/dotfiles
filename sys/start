#!/usr/bin/env bash

# A lot of this is based on the excellent dotfiles scripts by
# Zach Holman. You can find it here: https://github.com/holman/dotfiles
# I wanted to customize it to add support for cross-platform dotfiles
# So I started from scratch but you should try his scripts because they are
# WAY better than mine :)

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd)
UNAME=$(uname)

set -e

echo ''

source "$DOTFILES_ROOT/sys/_common.sh"

install_dotfiles () {
    info 'installing dotfiles'

    local overwrite_all=false backup_all=false skip_all=false

    for src in $(find "$DOTFILES_ROOT/" -maxdepth 2 -name '*.symlink')
    do
        dst="$HOME/.$(basename "${src%.*}")"
        link_file "$src" "$dst"
    done

    for src in $(find "$DOTFILES_ROOT/" -maxdepth 2 -type f -name '*.copy')
    do
        dst="$HOME/.$(basename "${src%.*}")"
        (
        set +e
        cp -f "$src" "$dst"
        set -e
        )
        success "copied $src to $dst"
    done

    # Custom install scripts
    for src in $(find "$DOTFILES_ROOT/" -maxdepth 2 -type f -name '*.install.sh')
    do
        source $src
    done
}

if cat /proc/version | grep Microsoft >/dev/null 2>&1; then
    WSL=1
else
    WSL=0
fi

if [ $WSL = "1" ]; then
    echo "Initializing for Windows Subsystem for Linux"

    # Symlink some useful directories
    WINHOME=/mnt/c/Users/$USER
    if [ -e $WINHOME ]; then
        [ ! -e ~/Winhome ] || rm ~/Winhome
        ln -s $WINHOME ~/Winhome
        success "symlinked $WINHOME to ~/Winhome"
    fi
    [ ! -e ~/Code ] || rm ~/Code
    ln -s ~/Winhome/Code ~/Code
    success "symlinked ~/Winhome/Code to ~/Code"
    [ ! -e ~/.ssh ] || rm -Rf ~/.ssh

    ln -s ~/Winhome/.ssh ~/.ssh
    success "symlinked ~/Winhome/.ssh to ~/.ssh"

    # Symlink ourselves if we aren't already
    if [ ! -e ~/.dotfiles ]; then
        ln -s $DOTFILES_ROOT ~/.dotfiles
        success "symlinked $DOTFILES_ROOT to ~/.dotfiles"

        # Change DOTFILES_ROOT
        DOTFILES_ROOT=~/.dotfiles
    fi

    # Fix ssh permissions
    chmod -R 0700 ~/.ssh
fi

if ! [ -f git/gitconfig ]; then
    ./sys/gitconfig.sh
fi

install_dotfiles

# Configure shell
if [ $(basename $SHELL) != "zsh" ]; then
    info "configuring default shell to be 'zsh'"
    if type -p zsh >/dev/null 2>&1; then
        ZSH_PATH=$(type -p zsh)
        chsh -s $ZSH_PATH
        success "configured default shell as zsh"
    else
        user "unable to configure default shell to zsh, it is not installed"
    fi
else
    success "default shell is already zsh"
fi

git submodule update --init

echo ''
echo '  All installed!'
